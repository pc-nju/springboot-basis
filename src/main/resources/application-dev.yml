#访问端口
server:
  port: 8080
spring:
  application:
    name: tushuo
  datasource:
          #JDBC配置
          name: test
          url: jdbc:mysql://127.0.0.1:3306/tomcat?autoReconnect=true&useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true
          username: root
          password: root
          driver-class-name: com.mysql.jdbc.Driver

          # 使用druid数据源
          type: com.alibaba.druid.pool.DruidDataSource

          #--------------------Druid 连接池配置 start-----------------------------
          druid:
            #初始化大小，最小，最大
            initial-size: 5
            min-idle: 1
            max-active: 50
            #配置获取连接等待超时时间
            max-wait: 60000
            # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
            time-between-eviction-runs-millis: 60000
            # 配置一个连接在池中最小生存的时间，单位是毫秒
            min-evictable-idle-time-millis: 300000
            validation-query: SELECT 1 FROM DUAL
            test-while-idle: true
            test-on-borrow: false
            test-on-return: false
            # 打开PSCache，并且指定每个连接上PSCache的大小
            pool-prepared-statements: false
            max-pool-prepared-statement-per-connection-size: 20

            #--------------------监控配置 start-----------------------------
            # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
            filters: stat,wall,log4j
            # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
            connection-properties: druid.stat.mergeSql=true
            filter:
              stat:
                slow-sql-millis: 5000

          #--------------------Druid 连接池配置 end-----------------------------
#mybatis配置
mybatis:
  #配置mapper文件所在的位置
  mapper-locations: classpath:mybatis/mappers/*.xml
  #配置实体类的位置，这样在mapper文件中的返回值类型直接写User即可（否则要加上包名.类名）
  type-aliases-package: com.tushuo.entity

#pagehelper配置
pagehelper:
  offset-as-page-num: true
  row-bounds-with-count: true
  reasonable: true
#配置 logback
logging:
  config: classpath:log/logback-spring-dev.xml
#监控
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always



